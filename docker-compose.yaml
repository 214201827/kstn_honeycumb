services:
  honeycumb-front:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: honeycumb-front
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - honeycumb-network

  honeycumb-back:
    build:
      context: ./node # Ruta a la carpeta del proyecto backend
      dockerfile: Dockerfile
    container_name: honeycumb-back
    environment:
      - JWT_SECRET={$JWT_SECRET}
      - DB_HOST=db
      - DB_USER=keystone
      - DB_PASSWORD=keystone
      - DB_NAME=honeycumb
    ports:
      - "3000:3000" # Puerto en el que corre tu aplicación Node.js
    volumes:
      - ./backups:/backups
    depends_on:
      db:
        condition: service_healthy # Esperar a que el servicio db esté saludable
    networks:
      - honeycumb-network

  db:
    image: mariadb:10.11.6
    container_name: mariadb
    environment:
      MARIADB_ROOT_PASSWORD: keystone
      MARIADB_DATABASE: honeycumb
      MARIADB_USER: keystone
      MARIADB_PASSWORD: keystone
    volumes:
      - ./db/mariadb-image-docker-init.sql:/docker-entrypoint-initdb.d/mariadb-image-docker-init.sql
      - ./db-data:/var/lib/mysql
    networks:
      - honeycumb-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  db-backup:
    image: mariadb:10.11.6
    container_name: db-backup
    environment:
      MARIADB_ROOT_PASSWORD: keystone
      MARIADB_DATABASE: honeycumb
      MARIADB_USER: keystone
      MARIADB_PASSWORD: keystone
    volumes:
      - ./node/backups:/backups  # Directorio local para guardar los respaldos
      - ./db-data:/var/lib/mysql
      - ./backup-day.sh:/backup-day.sh
      - ./db/healthcheck.sh:/healthcheck.sh
      - ./backup.sh:/backup.sh
    entrypoint: ["/bin/bash", "/backup-day.sh"]
    depends_on:
      db:
        condition: service_healthy # Esperar a que el servicio db esté saludable
    networks:
      - honeycumb-network

networks:
  honeycumb-network:
    driver: bridge

volumes:
  db-data:
